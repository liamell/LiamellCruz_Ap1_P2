@page "/Combo/Delete/{ComboId:int}"
@using LiamellCruz_Ap1_P2.Models
@using LiamellCruz_Ap1_P2.Service
@inject ToastService Toast
@inject ComboService comboService
@inject NavigationManager navigationManager
@rendermode InteractiveServer



<PageTitle> Eliminar Combo</PageTitle>
<div class="container">
	<div class="shadow-lg">
		@*Header*@
		<div class="card-header text-center">
			<h3><strong>Eliminar Combo</strong></h3>
		</div>
		@*Body*@
		<div class="card-body">
			<div class="text-center">
				<h4><strong>Desea eliminar este Combo</strong></h4>
			</div>
			<ul class="mt-5">
				<li><strong>Id:</strong>@Combo.ComboId</li>
				<li><strong>Fecha:</strong>@Combo.Fecha</li>
				<li><strong>Descripcion:</strong>@Combo.Descripcion</li>
				<li><strong>Precio:</strong>@Combo.Precio</li>
				<li><strong>Vendido:</strong>@Combo.Vendido</li>

			</ul>
		</div>

		@*Detalles de los artículos utilizados en el combo*@ 
			<div class="border border-success p-2 mt-2">
			<h5>Detalles de artículos utilizados</h5>
			<ul class="mt-3">
				@foreach (var detalle in Combo.ComboDetalle)
				{
					<li class="mt-2">
						Articulo ID: @detalle.ArticuloId -- @detalle.Articulo?.Descripcion --
						Cantidad: @detalle.Cantidad -- Costo Total: $ @detalle.Costo
					</li>
				}
			</ul>
		</div>

		@*Footer*@
		<div class="card-footer text-center">
			<button type="button" class="btn btn-primary" @onclick="Volver">Volver</button>
			<button Type="button" Class="btn btn-danger" @onclick="Eliminar">Eliminar</button>
		</div>
	</div>
</div>






@code {

	[Parameter]
	public int ComboId { get; set; }

	public Combo Combo { get; set; } = new Combo();

	protected override async Task OnInitializedAsync()
	{
		Combo = await comboService.Buscar(ComboId);
	}

	public async Task Eliminar()
	{
		if (!Combo.Vendido)
		{
			var eliminado = await comboService.Eliminar(Combo.ComboId);
			if (eliminado)
			{
				Toast.Notify(new ToastMessage(ToastType.Success, "Combo eliminado correctamente"));
				await Task.Delay(3000); 
				navigationManager.NavigateTo("Combo/Index"); 
			}
			else
			{
				Toast.Notify(new ToastMessage(ToastType.Danger, "No se pudo eliminar el combo"));
			}
		}
		else
		{
		
			Toast.Notify(new ToastMessage(ToastType.Danger, "No se puede eliminar el combo porque ya ha sido vendido"));
			await Task.Delay(3000); 
			navigationManager.NavigateTo("Combo/Index"); 
		}

	}


	public void Volver()
	{

		navigationManager.NavigateTo("/Combo/Index");

	}




}
